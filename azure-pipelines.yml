trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

resources:
  repositories:
  - repository: VulnerableWebApp
    type: github
    endpoint: metalstormbass
    name: metalstormbass/VulnerableWebApp

stages:
  - stage: 
    jobs:
    
    - job: Terraform_Security_Scan  
      steps:
        - checkout: VulnerableWebApp
        - checkout: self
        - bash: |
              ls VulnerableWebApp/
              chmod +x VulnerableAzure-AzurePipeline/shiftleft
              VulnerableAzure-AzurePipeline/shiftleft iac-assessment -r 201981 --path VulnerableAzure-AzurePipeline/
              VulnerableAzure-AzurePipeline/shiftleft sourceguard -s VulnerableWebApp/
          env:
           CHKP_CLOUDGUARD_ID: $(CHKP_CLOUDGUARD_ID)
           CHKP_CLOUDGUARD_SECRET: $(CHKP_CLOUDGUARD_SECRET)
           SG_CLIENT_ID: $(SG_CLIENT_ID)
           SG_SECRET_KEY: $(SG_SECRET_KEY)
          continueOnError: True
        - task: ArchiveFiles@2
          inputs:
            rootFolderOrFile: 'VulnerableWebApp/'
            includeRootFolder: false
            archiveType: 'zip'
            archiveFile: 'VulnerableWebApp.zip'
            replaceExistingArchive: true
            verbose: true
        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: './VulnerableWebApp.zip'
            artifact: 'VulnerableWebApp.zip'
            publishLocation: 'pipeline'
    
    - job:  Terraform_Plan    
      dependsOn: Terraform_Security_Scan
      steps:
      
       - task: TerraformInstaller@0
         inputs:
          terraformVersion: '0.13.3'
      
       - bash: |
                
                sed -i "/token/c\   token\ = \"$TERRAFORM_API_KEY\"" main.tf                            
                cat main.tf
                terraform init
                terraform plan
                rm -r ./.terraform
                
         env: 
          TERRAFORM_API_KEY: $(TERRAFORM_API_KEY)
      
       - task: ArchiveFiles@2
         inputs:
            rootFolderOrFile: './'
            includeRootFolder: false
            archiveType: 'zip'
            archiveFile: './VulnerableAzure.zip'
            replaceExistingArchive: true
       - task: PublishPipelineArtifact@1
         inputs:
            targetPath: './VulnerableAzure.zip'
            artifact: 'VulnerableAzure.zip'
            publishLocation: 'pipeline'